<?xml version="1.0" encoding="utf-8"?>
<Symbols LinesOfCode="351" PostSharpLinesOfCode="0" EnhancedTypesCount="5" SchemaVersion="1" PostSharpVersion="4.3.26.0" xmlns="http://schemas.postsharp.org/2.0/symbols">
  <Evolution Source="#1=F:[InvariantSynthesis]InvariantSynthesis.LogExample::Value" Target="#2=F:[InvariantSynthesis]InvariantSynthesis.LogExample::&lt;Value&gt;k__OriginalField" />
  <Evolution Source="#2" Target="#3=P:[InvariantSynthesis]InvariantSynthesis.LogExample::Value()" />
  <Class Class="#4=T:[PostSharp]PostSharp.Serialization.PSerializableAttribute">
    <Instance Declaration="#5=T:[InvariantSynthesis]InvariantSynthesis.Utility.CsvLogMethodAttribute" Id="4435c8b53f821b17">
      <Target />
    </Instance>
    <Instance Declaration="#6=T:[InvariantSynthesis]InvariantSynthesis.Utility.ConsoleLogMethodAttribute" Id="4435c8b5648410da">
      <Target />
    </Instance>
    <Instance Declaration="#7=T:[InvariantSynthesis]InvariantSynthesis.Utility.LogSetValueAttribute" Id="4435c8b523f9707c">
      <Target />
    </Instance>
  </Class>
  <Class Class="#5">
    <Instance Declaration="#8=A:InvariantSynthesis" Id="4435c8b571e2542e">
      <Target Target="#9=M:[InvariantSynthesis]InvariantSynthesis.LogExample::Main(System.String[])" LinesAvoided="6">
        <JoinPoint Description="#10=Wrapped by advice(s) OnEntry, OnSuccess, OnException, OnExit" Ordinal="0" />
      </Target>
      <Target Target="#11=M:[InvariantSynthesis]InvariantSynthesis.LogExample::Fibonacci(System.Int32)" LinesAvoided="6">
        <JoinPoint Description="#10" />
      </Target>
      <Target Target="#12=M:[InvariantSynthesis]InvariantSynthesis.LogExample::#ctor()" LinesAvoided="6">
        <JoinPoint Description="#10" Ordinal="2" />
      </Target>
      <Target Target="#13=M:[InvariantSynthesis]InvariantSynthesis.LoggedUtility.Assert::#ctor()" LinesAvoided="6">
        <JoinPoint Description="#10" Ordinal="5" />
      </Target>
      <Target Target="#14=M:[InvariantSynthesis]InvariantSynthesis.LoggedUtility.Assert::Restart()" LinesAvoided="6">
        <JoinPoint Description="#10" Ordinal="6" />
      </Target>
      <Target Target="#15=M:[InvariantSynthesis]InvariantSynthesis.LoggedUtility.Assert::AreEqual(System.Int32, System.Int32)" LinesAvoided="6">
        <JoinPoint Description="#10" Ordinal="7" />
      </Target>
      <Target Target="#16=M:[InvariantSynthesis]InvariantSynthesis.LoggedUtility.Assert::IsTrue(System.Boolean)" LinesAvoided="6">
        <JoinPoint Description="#10" Ordinal="8" />
      </Target>
      <Target Target="#17=M:[InvariantSynthesis]InvariantSynthesis.LoggedUtility.Assert::IsFalse(System.Boolean)" LinesAvoided="6">
        <JoinPoint Description="#10" Ordinal="9" />
      </Target>
      <Target Target="#18=M:[InvariantSynthesis]InvariantSynthesis.LoggedUtility.Assert::Inv_ThrowsException(System.Action)" LinesAvoided="6">
        <JoinPoint Description="#10" Ordinal="10" />
      </Target>
      <Target Target="#19=M:[InvariantSynthesis]InvariantSynthesis.LoggedUtility.Assert::Inv_AssertAll()" LinesAvoided="6">
        <JoinPoint Description="#10" Ordinal="11" />
      </Target>
    </Instance>
  </Class>
  <Class Class="#7">
    <Instance Declaration="#2" Id="4435c8b54e3eaf2c">
      <Target>
        <JoinPoint Description="#20=Intercepted by advice " Semantic="Getter" Ordinal="3" />
        <JoinPoint Description="#21=Intercepted by advice OnSetValue" Semantic="Setter" Ordinal="4" />
      </Target>
    </Instance>
  </Class>
  <Annotation Target="#22=M:[PostSharp]PostSharp.Aspects.LocationInterceptionAspect::OnGetValue([PostSharp]PostSharp.Aspects.LocationInterceptionArgs)" Arguments="#23=2" Description="#24=PostSharp estimates that 2 line(s) of code are saved every time this advice is applied. Use the [LinesOfCodeAvoided] attribute on the aspect or specify the LinesOfCodeAvoided property on the advice attribute to override this value." />
</Symbols>